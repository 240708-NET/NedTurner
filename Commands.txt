

----CREATE CLASS LIBRARY
dotnet new classlib -n <name>.Repo

---CREATE SOLUTION
dotnet new sln -n CsvReader
dotnet sln add <path to csproj or directory in which there is only one csproj>
----add reference (while within the directory that will be referencing the other directory)
dotnet add reference <path to directory>


dotnet tool install --global dotnet-ef
dotnet tool update --global dotnet-ef
dotnet tool install --global dotnet-user-secrets

dotnet new web -o migrationDemo  

dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.SqlServer


--- user secrets
dotnet user-secrets init
dotnet user-secrets set ConnectionString "Server=localhost;Database=DemoDb;User=sa;Password=NotPassword123!;TrustServerCertificate=true;"
dotnet user-secrets list


dotnet ef migrations add Initial
dotnet ef database update
dotnet ef migrations add Update





npm init
npm install --save-dev jest
(save dev ensures jest is only installed in the project)
"test": "jest"
npm run test
npm run dev

etc     

npm install -g typescript


=Create Next.js app
npx create-next-app@latest

=INSTALL REACT
npm install next react react-dom
npm 
npm 

npm install --save-dev typescript @types/react @types/node




Before you write any React: https://react.dev/learn/thinking-in-react
Some context before you start writing: https://react.dev/learn
A pure React app: https://react.dev/learn/tutorial-tic-tac-toe
A simple app from vanilla to React to Next.js: https://nextjs.org/learn/react-foundations
A little more complex React with Next.js: https://nextjs.org/learn/dashboard-app